<?php

  /**
   * Implementation of hook_permission(). 
   */
  function sitemap_block_permission(){
    return array(
     'administer sitemap block' => array(
        'title' => t('administer sitemap block'), 
        'description' => t('Perform administration tasks for sitemap block.'),
      ),
    );
  }

  /**
   * Implementation of hook_menu().
   */
  function sitemap_block_menu(){
    $items = array();
    $items['admin/config/user-interface/sitemapblock'] = array(
      'title' => 'Sitemap Block',
      'description' => t('Configure the settings for sitemap_block'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sitemap_block_settings'),
      'access arguments' => array('administer sitemap block'),
      'type' => MENU_NORMAL_ITEM,
    );
    return $items;
  }

  /**
   * Implementation of system_settings_form().
   */
  function sitemap_block_settings($form){
    
    $form['sitemap_block_recurse_limit'] = array(
      '#type' => 'select',
      '#title' => t('Recurse Limit'),
      '#default_value' => variable_get('sitemap_block_recurse_limit',2),
      '#options' => array('1' => '1', '2' => '2', '3' => '3'),
      '#description' => t('Set the # of times to recurse through a particular menu.  Default is 2 and max is 3.'),
    );

    $result = db_query("SELECT menu_name, title FROM {menu_custom}");
    $options = array();  
    foreach($result as $menu){ $options[$menu->menu_name] = $menu->title; } 
    $form['sitemap_block_active_menu'] = array(
      '#type' => 'select',
      '#title' => t('Active Menu'),
      '#default_value' => variable_get('sitemap_block_active_menu', 'main-menu'),	
      '#options' => $options,
      '#description' => t('Choose the menu you wish to use for your sitemap'),
    );
    
    return system_settings_form($form);
  } 

  /**
   * Implementation of hook_block_info() 
   */
  function sitemap_block_block_info(){   
    $blocks['sitemap_block'] = array(
      'info' => t('Site Map Block'),
      'cache' => DRUPAL_NO_CACHE,
    );
    return $blocks;
  }
  
  /*
   * Implementation of hook_block_view
   */
  function sitemap_block_block_view($delta = ''){
    switch($delta){
      case 'sitemap_block':
        $block['content'] = sitemap_block_render_block(menu_tree_all_data(variable_get('sitemap_block_active_menu', 'main-menu'), '', variable_get('sitemap_block_recurse_limit', 2)), 'sitemap_block_parent');
        break;
    }
    return $block;
  }
  
  /**
   *  Helper Functions
   */
  function sitemap_block_render_block($menu, $id, $recurse=1){
    $recurse_limit = variable_get('sitemap_block_recurse_limit', 2);
    $count = 1;
    $total = count($menu);
    $output = "<ul id='".$id."'>";
    foreach($menu as $item){
      $link = $item["link"];
      if($link["hidden"]){ continue; }
      if($count == 1){ $class = " class='first'"; }
      elseif($count == $total){ $class = " class='last'"; }
      else{ $class = ''; }
      $output .= "<li".$class."><a href=\"" . check_url(url($link["href"], $link["options"])) . "\">" . $link["title"] . "</a></li>";
      if($item["below"] && $recurse < $recurse_limit){ $output .= sitemap_block_render_block($item["below"], "sitemap_block_".$link['mlid'], $recurse++); }
      $count++;
    }
    $output .= "</ul>";
    return $output;
  }
  
?>